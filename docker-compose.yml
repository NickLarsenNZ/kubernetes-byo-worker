version: "3.7"
services:

  bootstrap-certs:
    image: hashicorp/terraform
    init: true
    environment:
      TF_IN_AUTOMATION: 1
      TF_VAR_apiserver_port: ${KUBE_APISERVER_PORT:-6443}
    entrypoint: /bin/sh
    command:
      - -c
      - |
        # check to see if certs
        cd /tf
        terraform -version
        terraform init
        terraform plan -out tfplan
        terraform apply tfplan

        cd output/
        cp -v apiserver_*.pem ca_public.pem service-account-ca_public.pem /certs/apiserver/
        cp -v cm_*.pem ca_*.pem service-account-ca_*.pem /certs/controller-manager/
    volumes:
      - ./certs:/tf
      - certs-apiserver:/certs/apiserver
      - certs-controller-manager:/certs/controller-manager

  kube-apiserver:
    restart: always
    # https://console.cloud.google.com/gcr/images/google-containers/GLOBAL/kube-apiserver-amd64
    image: k8s.gcr.io/kube-apiserver-amd64:v${KUBE_VERSION:-1.15.3}
    command: 
      - kube-apiserver
      - --etcd-servers=http://etcd:2379
      - --authorization-mode=Node,RBAC
      - --client-ca-file=/run/config/pki/ca_public.pem
      - --kubelet-certificate-authority=/run/config/pki/ca_public.pem
      - --kubelet-client-certificate=/run/config/pki/apiserver_public.pem
      - --kubelet-client-key=/run/config/pki/apiserver_private.pem
      - --kubelet-https=true
      - --service-account-key-file=/run/config/pki/service-account-ca_public.pem
      - --tls-cert-file=/run/config/pki/apiserver_public.pem
      - --tls-private-key-file=/run/config/pki/apiserver_private.pem
    ports:
      - ${KUBE_APISERVER_PORT:-6443}:6443
    volumes:
      - certs-apiserver:/run/config/pki
    networks:
      - kube-master
    depends_on:
      - bootstrap-certs
      - etcd

    kube-apiserver:
    restart: always
    # https://console.cloud.google.com/gcr/images/google-containers/GLOBAL/kube-apiserver-amd64
    image: k8s.gcr.io/kube-apiserver-amd64:v${KUBE_VERSION:-1.15.3}
    command: 
      - kube-controller-manager
      - --leader-elect=true
      - --use-service-account-credentials=true 
      - --root-ca-file=/run/config/pki/ca.crt 
      - --cluster-signing-cert-file=/run/config/pki/ca_public.pem 
      - --cluster-signing-key-file=/run/config/pki/ca_private.key 
      - --address=127.0.0.1 
      - --controllers=*,bootstrapsigner,tokencleaner 
      - --kubeconfig=/etc/kubernetes/controller-manager.conf 
      - --service-account-private-key-file=/run/config/pki/sa.key

      - --client-ca-file=/run/config/pki/ca_public.pem
      - --kubelet-certificate-authority=/run/config/pki/ca_public.pem
      - --kubelet-client-certificate=/run/config/pki/apiserver_public.pem
      - --kubelet-client-key=/run/config/pki/apiserver_private.pem
      - --service-account-key-file=/run/config/pki/service-account-ca_public.pem
      - --tls-cert-file=/run/config/pki/apiserver_public.pem
      - --tls-private-key-file=/run/config/pki/apiserver_private.pem
    volumes:
      - certs-controller-manager:/run/config/pki
    networks:
      - kube-master
    depends_on:
      - kube-apiserver

  etcd:
    restart: always
    # https://console.cloud.google.com/gcr/images/google-containers/GLOBAL/etcd-amd64
    image: k8s.gcr.io/etcd-amd64:${ETCD_VERSION:-3.3.15}
    command:
      - etcd
      - --listen-client-urls=http://0.0.0.0:2379
      - --advertise-client-urls=http://etcd:2379
      - --data-dir=/var/lib/etcd
    ports:
      - "2379"
    volumes:
      - etcd-data:/var/lib/etcd
    networks:
      - kube-master
    depends_on:
      - bootstrap-certs

networks:
  kube-master:

volumes:
  etcd-data:
  certs-apiserver:
  certs-controller-manager: