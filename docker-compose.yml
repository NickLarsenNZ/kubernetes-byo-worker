version: "3.7"
services:

  bootstrap-certs:
    image: hashicorp/terraform
    init: true
    environment:
      TF_IN_AUTOMATION: 1
    entrypoint: /bin/sh
    command:
      - -c
      - |
        # check to see if certs
        cd /tf
        pwd
        ls -al
        terraform -version
        terraform init
        terraform plan -out tfplan
        terraform apply tfplan
    volumes:
      - type: bind
        source: ./certs
        target: /tf

  bootstrap-token:
    image: busybox
    init: true
    command:
      - sh
      - -c
      - |
        TOKEN=$$(head -c 16 /dev/urandom | od -An -t x | tr -d ' ')
        echo "$${TOKEN},dummy,10001,\"system:bootstrappers\"" > /token-data/temporary-tokens
        echo "Token: $${TOKEN}"
    volumes:
      - token-data:/token-data

  kube-apiserver:
    # https://console.cloud.google.com/gcr/images/google-containers/GLOBAL/kube-apiserver-amd64
    image: k8s.gcr.io/kube-apiserver-amd64:v${KUBE_VERSION:-1.15.3}
    command: 
      - kube-apiserver
      - --etcd-servers=http://etcd:2379
      #- --authorization-mode=RBAC
      - --token-auth-file=/token-data/temporary-tokens
    ports:
      - ${KUBE_APISERVER_PORT:-6443}:6443
    volumes:
      - token-data:/token-data
    networks:
      - kube-master
    depends_on:
      - bootstrap-token
      - etcd

  etcd:
    # https://console.cloud.google.com/gcr/images/google-containers/GLOBAL/etcd-amd64
    image: k8s.gcr.io/etcd-amd64:${ETCD_VERSION:-3.3.15}
    command:
      - etcd
      - --listen-client-urls=http://0.0.0.0:2379
      - --advertise-client-urls=http://etcd:2379
      - --data-dir=/var/lib/etcd
    ports:
      - "2379"
    volumes:
      - etcd-data:/var/lib/etcd
    networks:
      - kube-master

networks:
  kube-master:

volumes:
  token-data:
  etcd-data:
  terraform-certs: