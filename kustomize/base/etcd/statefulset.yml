apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: etcd
spec:
  serviceName: etcd-headless
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: etcd
  volumeClaimTemplates: []
  template:
    metadata:
      labels:
        app.kubernetes.io/name: etcd
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: etcd
        image: k8s.gcr.io/etcd-amd64:3.3.15
        imagePullPolicy: IfNotPresent
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        # Useful options: https://github.com/bitnami/charts/blob/363224b11eb854e2033d3405e4b0a44a22321d5f/bitnami/etcd/templates/statefulset.yaml#L143-L215
        # Also, for https
        # - --listen-client-urls=https://0.0.0.0:2379
        # - --listen-peer-urls=https://0.0.0.0:2380
        # - --advertise-client-urls=https://$HOSTNAME.etcd-headless:2379
        # - --auto-tls # or ...
        # - --client-cert-auth
        # - --trusted-ca-file=/var/lib/etcd/certs/ca-client.crt
        # - --cert-file=/var/lib/etcd/certs/infra0-client.crt
        # - --key-file=/var/lib/etcd/certs/infra0-client.key
        - name: ETCDCTL_API
          value: "3"
        - name: ETCD_NAME
          value: "$(POD_NAME)"
        # - name: ETCD_INITIAL_CLUSTER_STATE
        #   value: new
        - name: ETCD_INITIAL_CLUSTER
          value: "$(ETCD_STATEFULSET_NAME)-0=https://$(ETCD_STATEFULSET_NAME)-0.$(ETCD_HEADLESS_SERVICE_NAME):2380,$(ETCD_STATEFULSET_NAME)-1=https://$(ETCD_STATEFULSET_NAME)-1.$(ETCD_HEADLESS_SERVICE_NAME):2380,$(ETCD_STATEFULSET_NAME)-2=https://$(ETCD_STATEFULSET_NAME)-2.$(ETCD_HEADLESS_SERVICE_NAME):2380"
        - name: ETCD_DATA_DIR
          value: "/var/lib/etcd/data"
        - name: ETCD_ADVERTISE_CLIENT_URLS
          value: "http://$(POD_NAME).$(ETCD_HEADLESS_SERVICE_NAME):2379"
        - name: ETCD_LISTEN_CLIENT_URLS
          value: "http://0.0.0.0:2379"
        - name: ETCD_INITIAL_ADVERTISE_PEER_URLS
          value: "https://$(POD_NAME).$(ETCD_HEADLESS_SERVICE_NAME):2380"
        - name: ETCD_LISTEN_PEER_URLS
          value: "https://0.0.0.0:2380"
        - name: ETCD_PEER_CLIENT_CERT_AUTH
          value: "1"
        - name: ETCD_PEER_TRUSTED_CA_FILE
          value: "/var/lib/etcd/certs/peer/ca.crt"
        - name: ETCD_PEER_CERT_FILE
          value: "/var/lib/etcd/certs/peer/tls.crt"
        - name: ETCD_PEER_KEY_FILE
          value: "/var/lib/etcd/certs/peer/tls.key"
        # - name: ETCD_INITIAL_CLUSTER_TOKEN
        # # Todo: get this from a Secret
        #   value: "etcd-cluster-k8s"
        # - name: ETCD_INITIAL_CLUSTER_STATE
        #   value: "new"
        # - name: ETCD_INITIAL_CLUSTER
        #   value: etcd-0=http://etcd-0.etcd-headless:2380,etcd-1=http://etcd-1.etcd-headless:2380,etcd-2=http://etcd-2.etcd-headless:2380
        command:
        - etcd
        ports:
        - name: client
          containerPort: 2379
          protocol: TCP
        - name: peer
          containerPort: 2380
          protocol: TCP
        livenessProbe:
          exec:
            command:
            - etcdctl
            - endpoint 
            - health
          initialDelaySeconds: 60
        readinessProbe:
          exec:
            command:
            - etcdctl
            - endpoint 
            - health
          initialDelaySeconds: 60
        volumeMounts:
        - mountPath: /var/lib/etcd/certs/peer
          name: etcd-peer-certs
      volumes:
      - name: etcd-peer-certs
        secret:
          secretName: $(ETCD_PEER_CERT_SECRET_NAME)